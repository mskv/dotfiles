---
- name: MacOS setup
  hosts: local
  tasks:

    # - name: Print all available facts
    #   ansible.builtin.debug:
    #     var: ansible_facts



    - name: Set git name
      git_config:
        name: user.name
        value: Michał Podwórny

    - name: Set git email
      git_config:
        name: user.email
        value: podworny.m@gmail.com

    - name: Set git editor
      git_config:
        name: core.editor
        value: code --wait

    - name: Copy git global ignore
      copy:
        src: ./.global_gitignore
        dest: '{{ ansible_facts.user_dir }}/.global_gitignore'
        force: yes

    - name: Set git global ignore
      git_config:
        name: core.excludesfile
        value: '{{ ansible_facts.user_dir }}/.global_gitignore'

    - name: Install tig
      homebrew:
        name: tig
        state: latest



    - name: Create the ~/sources directory
      file:
        path: '{{ ansible_facts.user_dir }}/sources'
        state: directory

    - name: Create the ~/.config directory
      file:
        path: '{{ ansible_facts.user_dir }}/.config'
        state: directory



    - name: Install zsh
      homebrew:
        name:
          - zsh
          - zsh-completions
        state: latest

    - name: Clone oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh.git
        dest: '{{ ansible_facts.user_dir }}/sources/oh-my-zsh'
        update: no

    - name: Symlink .oh-my-zsh
      file:
        path: '{{ ansible_facts.user_dir }}/.oh-my-zsh'
        src: '{{ ansible_facts.user_dir }}/sources/oh-my-zsh'
        state: link

    - name: Register existent .zshrc
      stat: path=/{{ ansible_facts.user_dir }}/.zshrc
      register: existent_zshrc

    - name: Optionally backup .zshrc
      when: existent_zshrc.stat.exists
      copy:
        src: '{{ ansible_facts.user_dir }}/.zshrc'
        dest: '{{ ansible_facts.user_dir }}/.zshrc-backup'

    - name: Copy .zshrc
      copy:
        src: ./.zshrc
        dest: '{{ ansible_facts.user_dir }}/.zshrc'
        force: yes

    - name: Optionally change shell to zsh
      when: not lookup('env', 'SHELL') == '/bin/zsh'
      command: chsh -s /bin/zsh



    - name: Create the ~/.config/karabiner directory
      file:
        path: '{{ ansible_facts.user_dir }}/.config/karabiner'
        state: directory

    - name: Copy karabiner.json
      copy:
        src: ./karabiner.json
        dest: '{{ ansible_facts.user_dir }}/.config/karabiner/karabiner.json'
        force: yes



    - name: Install tmux
      homebrew:
        name: tmux
        state: latest

    - name: Clone tpm
      git:
        repo: https://github.com/tmux-plugins/tpm.git
        dest: '{{ ansible_facts.user_dir }}/sources/tpm'
        update: no

    - name: Create the ~/.tmux/plugins directory
      file:
        path: '{{ ansible_facts.user_dir }}/.tmux/plugins'
        state: directory

    - name: Symlink tpm
      file:
        path: '{{ ansible_facts.user_dir }}/.tmux/plugins/tpm'
        src: '{{ ansible_facts.user_dir }}/sources/tpm'
        state: link

    - name: Register existent .tmux.conf
      stat: path=/{{ ansible_facts.user_dir }}/.tmux.conf
      register: existent_tmux_conf

    - name: Optionally backup .tmux.conf
      when: existent_tmux_conf.stat.exists
      copy:
        src: '{{ ansible_facts.user_dir }}/.tmux.conf'
        dest: '{{ ansible_facts.user_dir }}/.tmux.conf-backup'

    - name: Copy .tmux.conf
      copy:
        src: ./.tmux.conf
        dest: '{{ ansible_facts.user_dir }}/.tmux.conf'
        force: yes



    - name: Install common asdf plugin dependencies
      homebrew:
        name:
          - coreutils
          - automake
          - autoconf
          - openssl
          - libyaml
          - readline
          - libxslt
          - libtool
          - unixodbc
          - unzip
          - curl
        state: latest

    - name: Install asdf
      homebrew:
        name: asdf
        state: latest



    - name: Tap homebrew/cask
      homebrew_tap:
        name: homebrew/cask
        state: present

    - name: Install Karabiner
      homebrew_cask:
        name: karabiner-elements
        state: installed

    - name: Install VSCode
      homebrew_cask:
        name: visual-studio-code
        state: installed

    - name: Install Chrome
      homebrew_cask:
        name: google-chrome
        state: installed

    - name: Install Slack
      homebrew_cask:
        name: slack
        state: installed

    - name: Install Docker
      homebrew_cask:
        name: docker
        state: installed
